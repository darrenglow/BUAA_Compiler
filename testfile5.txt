//#include <stdio.h>
//函数定义。 FuncDef → FuncType Ident '(' [FuncFParams] ')' Block
/*
int/void
() (...)
{} {...}
*/
int f0()
{
    return 1;
}
int f1(int x)
{
    return 1;
}
int f2(int x, int y)
{
    return 1;
}
int main(){
    printf("20376158\n");
    int a, b;
    a = 1;
    b = a;
    b = +a; //缺少+的报错添加
    b = -a; //缺少+的报错添加
    b = +-+a;   //缺少+的报错添加
    b = a + 1 - 1;
    printf("%d\n", b);
    b = a * 1 / 1 % 1;
    printf("%d\n", b);
    b = (a + 1) * (a - 1);
    printf("%d\n", b);
    b = f0() + f1(a) + f2(a, a);
    printf("%d\n", b);
    //b = (a / 1) * (a + 2) * (a % a) + a - 1 + f0() - f1(a) * f2(a, a);

//2. [Exp] ';'
    ;
    1;
//3. Block
    {}
    {{}}
    {{{}}}
    {{{;;;}}}
    {
        b = 1;
    }
//4. 'if' '(' Cond ')' Stmt [ 'else' Stmt ]
//Cond->LOrExp
//LOrExp → LAndExp
//LAndExp → EqExp
//EqExp → RelExp | EqExp ('==' | '!=') RelExp
//RelExp → AddExp | RelExp ('<' | '>' | '<=' | '>=') AddExp
    if (a)
    {
        printf("right branch\n");
    }
    if ((a - 1))
        printf("wrong branch1\n");
    if (!a)
    {
        printf("wrong branch2\n");
    }
    else
        printf("right branch\n");

    if (a > 10)
        printf("wrong branch3\n");
    else if (a >= 2)
        printf("wrong branch4\n");
    else if (a < 1)
        printf("wrong branch5\n");
    else if (a <= -10)
        printf("wrong branch6\n");
    else if (a == (1 + 1))
        printf("wrong branch7\n");
    else if (a != (a * 3))
        printf("right branch\n");
//5.'for' '(' [ForStmt] ';' [Cond] ';' [ForStmt] ')' Stmt
    int i;
    for (i = 1; i <= 10; i = i + 1)
    {
        a = a + 1;
    }
    printf("%d\n", a);
    i = 1;
    for (; i <= 10; i = i + 1)
    {
        ;
    }
    for (i = 1;; i = i + 1)
    {
        if (i == 10)
            break;
        if (i >= 5)
            //6.continue, break
            continue;
        a += 1;
    }
    for (i = 1; i <= 10;)
    {
        i = i + 1;
        a = a + 1;
    }
    for (;; i = i + 1)
    {
        break;
    }
    for (; i <= 20; )
    {
        break;
    }
    for (i = 1;;)
    {
        break;
    }
    for (;;)
    {
        break;
    }

    printf("%d\n", a);

//7.getint
    a = getint();
    return 0;

}
