# ADK 2023 sysy to mips compiler
.data 0x10008000
simple_const_a: .word 1
arr_1d_a: .word 2,3,4,5,6,
arr_2d_a: .word 7,8,9,10,
arr_2d_b: .word 44,55,66,77,88,99,
simple_cosnt_b: .word 11
arr_1d_b: .word 11,22,33,44,55,66,77,88,99,
simple_var_c: .word 327
simple_var_d: .word 0
arr_1d_c: .word 896,1,
arr_1d_d: .word 0,0,0,0,0,0,0,0,0,0,
arr_2d_c: .word 0,0,0,0,0,0,0,0,0,
arr_2d_d: .word 3,56,45,16,
arr_2d_e: .word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
str_0: .asciiz "Successfully call a function with 3 types of paras.\n"
str_1: .asciiz "\nJust get a number ["
str_2: .asciiz "] (greater than 100).\n"
str_3: .asciiz "\nJust get a number ["
str_4: .asciiz "] (smaller than or equal to 100).\n"
str_5: .asciiz "GLOBAL simple_var_c: "
str_6: .asciiz "\n"
str_7: .asciiz "lucky number: "
str_8: .asciiz "\n"
str_9: .asciiz "("
str_10: .asciiz ")"
str_11: .asciiz "\n"
str_12: .asciiz "The ones digit of the lucky number is greater than 7.\n"
.text

# ===============main=================
Func_main:
LABEL_17:

# DEF_VAR n[0x4]
### n -> $a2

# DEF_ARRAY ans[0x2c]

# END_ARRAY ans[0x2c]

# DEF_VAR 10 t[0x30]
### t -> $a3
li $a3 10

# CALL put_stu_id( )

# clear Register
# save to value t
sw $a3 -48($sp)
# save to value n
sw $a2 -4($sp)
# end clear Register
sw $ra 0($sp)
addiu $a0 $sp -172
move $sp $a0
jal Func_put_stu_id
addiu $sp $sp 172
lw $ra 0($sp)

# CALL empty_func( )

# clear Register
# end clear Register
sw $ra 0($sp)
addiu $a0 $sp -172
move $sp $a0
jal Func_empty_func
addiu $sp $sp 172
lw $ra 0($sp)

# OFFSET 0 arr_1d_b T24
### T24 -> $t0
addiu $t0 $gp 68

# LOAD T25 T24
### T25 -> $t1
lw $t1 0($t0)

# OFFSET 8 arr_1d_a T26
### T26 -> $t2
addiu $t2 $gp 12

# LOAD T27 T26
### T27 -> $t3
lw $t3 0($t2)

# DIV T25 T27 T28
### T28 -> $t4
div $t1 $t3
mflo $t4

# ASSIGN T28 simple_var_d
### simple_var_d -> $t5
move $t5 $t4

# CALL para_only( simple_var_d P_arr_1d_c P_arr_2d_d )

# clear Register
# save to value simple_var_d
sw $t5 108($gp)
# save to value T28
sw $t4 -76($sp)
# save to value T27
sw $t3 -72($sp)
# save to value T26
sw $t2 -68($sp)
# save to value T25
sw $t1 -64($sp)
# save to value T24
sw $t0 -60($sp)
# end clear Register
sw $ra 0($sp)
addiu $a0 $sp -172
lw $t6 108($gp)
sw $t6 -4($a0)
addiu $t7 $gp 112
sw $t7 -8($a0)
addiu $s0 $gp 196
sw $s0 -12($a0)
move $sp $a0
jal Func_para_only
addiu $sp $sp 172
lw $ra 0($sp)
LABEL_18:

# JUMP_EQZ t LABEL_22
lw $s1 -48($sp)
beqz $s1 LABEL_22

# JUMP LABEL_21
# save to value t
sw $s1 -48($sp)
j LABEL_21

# LABEL_22:
LABEL_22:

# JUMP LABEL_19
j LABEL_19

# LABEL_21:
LABEL_21:

# SUB t 1 T29
lw $s2 -48($sp)
li $s3 1
### T29 -> $s4
subu $s4 $s2 $s3

# ASSIGN T29 t
move $s2 $s4

# CALL get_then_print( )

# clear Register
# save to value T29
sw $s4 -80($sp)
# save to value t
sw $s2 -48($sp)
# end clear Register
sw $ra 0($sp)
addiu $a0 $sp -172
move $sp $a0
jal Func_get_then_print
addiu $sp $sp 172
lw $ra 0($sp)
### T30 -> $s5
move $s5 $v0

# MOD T30 10 T31
li $s6 10
### T31 -> $s7
div $s5 $s6
mfhi $s7

# ADD T31 10 T32
li $t8 10
### T32 -> $t9
addu $t9 $s7 $t8

# ASSIGN T32 n
### n -> $k0
move $k0 $t9

# GE n 10 T33
li $k1 10
### T33 -> $a2
sge $a2 $k0 $k1

# JUMP_EQZ T33 LABEL_26
# save to value n
sw $k0 -4($sp)
# save to value T32
sw $t9 -92($sp)
# save to value T31
sw $s7 -88($sp)
# save to value T30
sw $s5 -84($sp)
# save to value T33
sw $a2 -96($sp)
lw $a3 -96($sp)
beqz $a3 LABEL_26

# JUMP LABEL_25
# save to value T33
sw $a3 -96($sp)
j LABEL_25

# LABEL_26:
LABEL_26:

# JUMP LABEL_24
j LABEL_24

# LABEL_25:
LABEL_25:
LABEL_23:

# SUB n 10 T34
lw $t0 -4($sp)
li $t1 10
### T34 -> $t2
subu $t2 $t0 $t1

# ASSIGN T34 n
move $t0 $t2
# save to value T34
sw $t2 -100($sp)
# save to value n
sw $t0 -4($sp)

# LABEL_24:
LABEL_24:

# PRINT_STR str_7
li $a0 268469013
li $v0 4
syscall

# PRINT_INT n
lw $t3 -4($sp)
move $a0 $t3
li $v0 1
syscall

# PRINT_STR str_8
li $a0 268469028
li $v0 4
syscall

# DEF_VAR 0 simple_var_c[0x34]
### simple_var_c -> $t4
li $t4 0

# DEF_VAR 0 index[0x38]
### index -> $t5
li $t5 0
# save to value index
sw $t5 -56($sp)
# save to value simple_var_c
sw $t4 -52($sp)
# save to value n
sw $t3 -4($sp)
LABEL_27:

# LT simple_var_c 8 T35
lw $t6 -52($sp)
li $t7 8
### T35 -> $s0
slt $s0 $t6 $t7

# JUMP_EQZ T35 LABEL_31
# save to value T35
sw $s0 -104($sp)
# save to value simple_var_c
sw $t6 -52($sp)
lw $s1 -104($sp)
beqz $s1 LABEL_31

# JUMP LABEL_30
# save to value T35
sw $s1 -104($sp)
j LABEL_30

# LABEL_31:
LABEL_31:

# JUMP LABEL_28
j LABEL_28

# LABEL_30:
LABEL_30:

# EQ simple_var_c 2 T36
lw $s2 -52($sp)
li $s3 2
### T36 -> $s4
seq $s4 $s2 $s3

# JUMP_EQZ T36 LABEL_36
# save to value T36
sw $s4 -108($sp)
# save to value simple_var_c
sw $s2 -52($sp)
lw $s5 -108($sp)
beqz $s5 LABEL_36

# JUMP LABEL_35
# save to value T36
sw $s5 -108($sp)
j LABEL_35

# LABEL_36:
LABEL_36:

# JUMP LABEL_33
j LABEL_33

# LABEL_35:
LABEL_35:
LABEL_32:

# ADD simple_var_c 1 T37
lw $s6 -52($sp)
li $s7 1
### T37 -> $t8
addu $t8 $s6 $s7

# ASSIGN T37 simple_var_c
move $s6 $t8

# JUMP LABEL_27
# save to value T37
sw $t8 -112($sp)
# save to value simple_var_c
sw $s6 -52($sp)
j LABEL_27

# JUMP LABEL_34
j LABEL_34
LABEL_33:

# ADD n 1 T38
lw $t9 -4($sp)
li $k0 1
### T38 -> $k1
addu $k1 $t9 $k0

# LE T38 simple_var_c T39
lw $a2 -52($sp)
### T39 -> $a3
sle $a3 $k1 $a2

# JUMP_EQZ T39 LABEL_40
# save to value T38
sw $k1 -116($sp)
# save to value n
sw $t9 -4($sp)
# save to value T39
sw $a3 -120($sp)
# save to value simple_var_c
sw $a2 -52($sp)
lw $t0 -120($sp)
beqz $t0 LABEL_40

# JUMP LABEL_39
# save to value T39
sw $t0 -120($sp)
j LABEL_39

# LABEL_40:
LABEL_40:

# JUMP LABEL_38
j LABEL_38

# LABEL_39:
LABEL_39:
LABEL_37:

# JUMP LABEL_28
j LABEL_28

# LABEL_38:
LABEL_38:

# LABEL_34:
LABEL_34:

# MUL simple_var_c 4 T40
lw $t1 -52($sp)
li $t2 4
### T40 -> $t3
mul $t3 $t1 $t2

# OFFSET T40 arr_1d_b T41
### T41 -> $t4
### arr_1d_b -> $t5
addi $t5 $gp 68
addu $t4 $t5 $t3

# LOAD T42 T41
### T42 -> $t6
lw $t6 0($t4)

# PRINT_STR str_9
li $a0 268469030
li $v0 4
syscall

# PRINT_INT simple_var_c
move $a0 $t1
li $v0 1
syscall

# PRINT_STR str_10
li $a0 268469032
li $v0 4
syscall

# PRINT_INT T42
move $a0 $t6
li $v0 1
syscall

# PRINT_STR str_11
li $a0 268469034
li $v0 4
syscall

# MUL simple_var_c 4 T43
li $t7 4
### T43 -> $s0
mul $s0 $t1 $t7

# OFFSET T43 arr_1d_b T44
### T44 -> $s1
addi $t5 $gp 68
addu $s1 $t5 $s0

# LOAD T45 T44
### T45 -> $s2
lw $s2 0($s1)

# MUL index 4 T46
lw $s3 -56($sp)
li $s4 4
### T46 -> $s5
mul $s5 $s3 $s4

# OFFSET T46 ans T47
### T47 -> $s6
### ans -> $s7
addi $s7 $sp -44
addu $s6 $s7 $s5

# STORE T45 T47
sw $s2 0($s6)

# ADD index 1 T48
li $t8 1
### T48 -> $t9
addu $t9 $s3 $t8

# ASSIGN T48 index
move $s3 $t9

# ADD simple_var_c 1 T49
li $k0 1
### T49 -> $k1
addu $k1 $t1 $k0

# ASSIGN T49 simple_var_c
move $t1 $k1

# JUMP LABEL_27
# save to value T49
sw $k1 -160($sp)
# save to value T48
sw $t9 -156($sp)
# save to value T47
sw $s6 -152($sp)
# save to value T46
sw $s5 -148($sp)
# save to value index
sw $s3 -56($sp)
# save to value T45
sw $s2 -144($sp)
# save to value T44
sw $s1 -140($sp)
# save to value T43
sw $s0 -136($sp)
# save to value T42
sw $t6 -132($sp)
# save to value T41
sw $t4 -128($sp)
# save to value T40
sw $t3 -124($sp)
# save to value simple_var_c
sw $t1 -52($sp)
j LABEL_27

# JUMP LABEL_27
j LABEL_27

# LABEL_28:
LABEL_28:

# ADD n 1 T50
lw $a2 -4($sp)
li $a3 1
### T50 -> $t0
addu $t0 $a2 $a3

# NE T50 simple_var_c T51
lw $t1 -52($sp)
### T51 -> $t2
sne $t2 $t0 $t1

# JUMP_EQZ T51 LABEL_44
# save to value T51
sw $t2 -168($sp)
# save to value simple_var_c
sw $t1 -52($sp)
# save to value T50
sw $t0 -164($sp)
# save to value n
sw $a2 -4($sp)
lw $t3 -168($sp)
beqz $t3 LABEL_44

# JUMP LABEL_43
# save to value T51
sw $t3 -168($sp)
j LABEL_43

# LABEL_44:
LABEL_44:

# JUMP LABEL_42
j LABEL_42

# LABEL_43:
LABEL_43:
LABEL_41:

# PRINT_STR str_12
li $a0 268469036
li $v0 4
syscall

# LABEL_42:
LABEL_42:

# JUMP LABEL_18
j LABEL_18

# JUMP LABEL_18
j LABEL_18

# LABEL_19:
LABEL_19:

# CALL put_global_simple_var_c( )

# clear Register
# end clear Register
sw $ra 0($sp)
addiu $a0 $sp -172
move $sp $a0
jal Func_put_global_simple_var_c
addiu $sp $sp 172
lw $ra 0($sp)

# return 0
li $v0 10
syscall

# ===============empty_func=================
Func_empty_func:
LABEL_1:

# return 
jr $ra

# ===============para_only=================
Func_para_only:
LABEL_2:

# PARAM a

# PARAM b

# PARAM c

# PRINT_STR str_0
li $a0 268468836
li $v0 4
syscall

# return 
jr $ra

# ===============put_stu_id=================
Func_put_stu_id:
LABEL_3:

# return 
jr $ra

# ===============sum_arr_1d=================
Func_sum_arr_1d:
LABEL_4:

# PARAM arr

# PARAM length

# DEF_VAR 0 i[0xc]
### i -> $t4
li $t4 0

# DEF_VAR 0 sum[0x10]
### sum -> $t5
li $t5 0
# save to value sum
sw $t5 -16($sp)
# save to value i
sw $t4 -12($sp)
LABEL_5:

# SUB length 1 T0
lw $t6 -8($sp)
li $t7 1
### T0 -> $s0
subu $s0 $t6 $t7

# LE i T0 T1
lw $s1 -12($sp)
### T1 -> $s2
sle $s2 $s1 $s0

# JUMP_EQZ T1 LABEL_9
# save to value T1
sw $s2 -24($sp)
# save to value i
sw $s1 -12($sp)
# save to value T0
sw $s0 -20($sp)
# save to value length
sw $t6 -8($sp)
lw $s3 -24($sp)
beqz $s3 LABEL_9

# JUMP LABEL_8
# save to value T1
sw $s3 -24($sp)
j LABEL_8

# LABEL_9:
LABEL_9:

# JUMP LABEL_6
j LABEL_6

# LABEL_8:
LABEL_8:

# MUL i 4 T2
lw $s4 -12($sp)
li $s5 4
### T2 -> $s6
mul $s6 $s4 $s5

# OFFSET T2 arr T3
### T3 -> $s7
lw $t8 -4($sp)
# !!!!arr -> $t8
addu $s7 $t8 $s6

# LOAD T4 T3
### T4 -> $t9
lw $t9 0($s7)

# ADD sum T4 T5
lw $k0 -16($sp)
### T5 -> $k1
addu $k1 $k0 $t9

# ASSIGN T5 sum
move $k0 $k1

# ADD i 1 T6
li $a2 1
### T6 -> $a3
addu $a3 $s4 $a2

# ASSIGN T6 i
move $s4 $a3

# JUMP LABEL_5
# save to value T5
sw $k1 -40($sp)
# save to value sum
sw $k0 -16($sp)
# save to value T4
sw $t9 -36($sp)
# save to value T3
sw $s7 -32($sp)
# save to value T2
sw $s6 -28($sp)
# save to value i
sw $s4 -12($sp)
# save to value T6
sw $a3 -44($sp)
j LABEL_5

# JUMP LABEL_5
j LABEL_5

# LABEL_6:
LABEL_6:

# return sum
lw $t0 -16($sp)
move $v0 $t0
# save to value sum
sw $t0 -16($sp)
jr $ra

# ===============get_then_print=================
Func_get_then_print:
LABEL_10:

# DEF_ARRAY const_tmp[0x8]

# OFFSET 0 const_tmp T7
### T7 -> $t1
addiu $t1 $sp -8

# STORE 66 T7
li $t2 66
sw $t2 0($t1)

# OFFSET 4 const_tmp T8
### T8 -> $t3
addiu $t3 $sp -4

# STORE 88 T8
li $t4 88
sw $t4 0($t3)

# END_ARRAY const_tmp[0x8]

# DEF_VAR tmp[0xc]
### tmp -> $t5

# DEF_VAR ans[0x10]
### ans -> $t6

# DEF_ARRAY ret[0x28]

# END_ARRAY ret[0x28]

# GETINT tmp
li $v0 5
syscall
move $t5 $v0

# GT tmp 100 T9
li $t7 100
### T9 -> $s0
sgt $s0 $t5 $t7

# JUMP_EQZ T9 LABEL_15
# save to value T9
sw $s0 -52($sp)
# save to value ans
sw $t6 -16($sp)
# save to value tmp
sw $t5 -12($sp)
# save to value T8
sw $t3 -48($sp)
# save to value T7
sw $t1 -44($sp)
lw $s1 -52($sp)
beqz $s1 LABEL_15

# JUMP LABEL_14
# save to value T9
sw $s1 -52($sp)
j LABEL_14

# LABEL_15:
LABEL_15:

# JUMP LABEL_12
j LABEL_12

# LABEL_14:
LABEL_14:
LABEL_11:

# PRINT_STR str_1
li $a0 268468889
li $v0 4
syscall

# PRINT_INT tmp
lw $s2 -12($sp)
move $a0 $s2
li $v0 1
syscall

# PRINT_STR str_2
li $a0 268468910
li $v0 4
syscall

# JUMP LABEL_13
# save to value tmp
sw $s2 -12($sp)
j LABEL_13
LABEL_12:

# PRINT_STR str_3
li $a0 268468933
li $v0 4
syscall

# PRINT_INT tmp
lw $s3 -12($sp)
move $a0 $s3
li $v0 1
syscall

# PRINT_STR str_4
li $a0 268468954
li $v0 4
syscall
# save to value tmp
sw $s3 -12($sp)

# LABEL_13:
LABEL_13:

# OFFSET 0 ret T10
### T10 -> $s4
addiu $s4 $sp -40

# STORE tmp T10
lw $s5 -12($sp)
sw $s5 0($s4)

# OFFSET 0 const_tmp T11
### T11 -> $s6
addiu $s6 $sp -8

# LOAD T12 T11
### T12 -> $s7
lw $s7 0($s6)

# DIV T12 2 T13
li $t8 2
### T13 -> $t9
div $s7 $t8
mflo $t9

# ADD tmp T13 T14
### T14 -> $k0
addu $k0 $s5 $t9

# OFFSET 4 ret T15
### T15 -> $k1
addiu $k1 $sp -36

# STORE T14 T15
sw $k0 0($k1)

# OFFSET 0 const_tmp T16
### T16 -> $a2
addiu $a2 $sp -8

# LOAD T17 T16
### T17 -> $a3
lw $a3 0($a2)

# OFFSET 4 const_tmp T18
### T18 -> $t0
addiu $t0 $sp -4

# LOAD T19 T18
### T19 -> $t1
lw $t1 0($t0)

# MUL T17 T19 T20
### T20 -> $t2
mul $t2 $a3 $t1

# OFFSET 8 ret T21
### T21 -> $t3
addiu $t3 $sp -32

# STORE T20 T21
sw $t2 0($t3)

# OFFSET 0 ret T22
### T22 -> $t4
addiu $t4 $sp -40

# CALL sum_arr_1d( P_ret 3 )

# clear Register
# save to value T15
sw $k1 -76($sp)
# save to value T14
sw $k0 -72($sp)
# save to value T13
sw $t9 -68($sp)
# save to value T12
sw $s7 -64($sp)
# save to value T11
sw $s6 -60($sp)
# save to value tmp
sw $s5 -12($sp)
# save to value T10
sw $s4 -56($sp)
# save to value T22
sw $t4 -104($sp)
# save to value T21
sw $t3 -100($sp)
# save to value T20
sw $t2 -96($sp)
# save to value T19
sw $t1 -92($sp)
# save to value T18
sw $t0 -88($sp)
# save to value T17
sw $a3 -84($sp)
# save to value T16
sw $a2 -80($sp)
# end clear Register
sw $ra 0($sp)
addiu $a0 $sp -112
lw $t6 -104($sp)
move $t5 $t6
sw $t5 -4($a0)
li $v0 3
sw $v0 -8($a0)
move $sp $a0
jal Func_sum_arr_1d
addiu $sp $sp 112
lw $ra 0($sp)
### T23 -> $t7
move $t7 $v0

# ASSIGN T23 ans
### ans -> $s0
move $s0 $t7

# return ans
move $v0 $s0
# save to value ans
sw $s0 -16($sp)
# save to value T23
sw $t7 -108($sp)
jr $ra

# ===============put_global_simple_var_c=================
Func_put_global_simple_var_c:
LABEL_16:

# PRINT_STR str_5
li $a0 268468989
li $v0 4
syscall

# PRINT_INT simple_var_c
lw $s1 104($gp)
move $a0 $s1
li $v0 1
syscall

# PRINT_STR str_6
li $a0 268469011
li $v0 4
syscall

# return 
# save to value simple_var_c
sw $s1 104($gp)
jr $ra
